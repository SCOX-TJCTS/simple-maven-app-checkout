




pipeline{
  agent any
 
  tools {
    jdk 'Amazon Corretto 8'
  }
  
 environment{
     getEmailNotification = 'scox@tjctechnology.com'
     NOTIFICATION_EMAIL = false
 }
  stages{
     stage ("Build / Package"){
            steps{
                    sh "mvn clean package"
                    archiveArtifacts artifacts: 'target/my-app-1.0-SNAPSHOT.jar', followSymlinks: false
              }  
        }
 
        stage('Deploy or Feature') { 
            parallel {
                
                     stage ("Deploy Branch"){
                       when {expression {env.GIT_BRANCH == 'origin/deploy'}
                          }
                          steps{
                            sh '$JAVA_HOME/bin/java -version'   
                          }  
                        }
                
                
                    stage ("Feature Branch"){
                      when {expression {env.GIT_BRANCH == 'origin/feature'}
                         }
                          steps{
                            sh 'printenv'   
                          }  
                        }
                      } 
                    }

        stage('SSH transfer') {
             steps{ 
                  script{
                        if (env.NOTIFICATION_EMAIL =='true'){
                              mail bcc: '', 
                              body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", 
                              cc: '', 
                              charset: 'UTF-8',
                              from: '',
                              mimeType: 'text/html', 
                              replyTo: '', 
                              subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} -${currentBuild.currentResult}", 
                              to: "${getEmailNotification}";  
                              echo 'email sent'
                              }
                          sh echo 'this happens always'
                       
                        }
                    }
                  }
                } 
 post{
        
         success {  
             mail bcc: '', 
             body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", 
             cc: '', 
             charset: 'UTF-8',
             from: '',
             mimeType: 'text/html', 
             replyTo: '', 
             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} -${currentBuild.currentResult}", 
             to: "${getEmailNotification}";  
         }
            failure {  
             mail bcc: '', 
             body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", 
             cc: '', 
             charset: 'UTF-8',
             from: '',
             mimeType: 'text/html', 
             replyTo: '', 
             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} -${currentBuild.currentResult}", 
             to: "${getEmailNotification}";  
         } 
         unstable {  
             mail bcc: '', 
             body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", 
             cc: '', 
             charset: 'UTF-8',
             from: '',
             mimeType: 'text/html', 
             replyTo: '', 
             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} -${currentBuild.currentResult}", 
             to: "${getEmailNotification}";
      }
    }

}
